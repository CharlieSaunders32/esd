# Generated by Django 4.0.3 on 2022-05-04 18:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=32, unique=True)),
                ('email', models.EmailField(max_length=32)),
                ('first_name', models.CharField(blank=True, max_length=32, null=True)),
                ('last_name', models.CharField(blank=True, max_length=32, null=True)),
                ('user_type', models.CharField(choices=[('Student', 'Student'), ('Representative', 'Representative')], default='Student', max_length=14)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClubRepresentative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('club_rep_id', models.CharField(max_length=6, null=True, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('password', models.CharField(max_length=8, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, null=True)),
                ('age_rating', models.CharField(choices=[('12+', '12+'), ('15+', '15+'), ('18+', '18+'), ('PG-13', 'PG-13')], default='string', max_length=7)),
                ('duration', models.IntegerField(null=True)),
                ('description', models.CharField(max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Screen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('screen_id', models.CharField(max_length=50)),
                ('seats', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UniversityClub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('club_name', models.CharField(max_length=200, null=True)),
                ('street_number', models.IntegerField(null=True)),
                ('street', models.CharField(max_length=200, null=True)),
                ('city', models.CharField(max_length=200, null=True)),
                ('postcode', models.CharField(max_length=200, null=True)),
                ('telephone', models.IntegerField(null=True)),
                ('mobile', models.IntegerField(null=True)),
                ('email', models.CharField(max_length=200, null=True)),
                ('debit_amount', models.IntegerField(default=0, null=True)),
                ('club_rep', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='uweflixapp.clubrepresentative')),
            ],
        ),
        migrations.CreateModel(
            name='Showing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('time', models.TimeField(null=True)),
                ('film', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='uweflixapp.film')),
                ('screen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uweflixapp.screen')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_quantity', models.IntegerField(default=0, null=True)),
                ('total_cost', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('card_number', models.IntegerField()),
                ('expiry_date', models.IntegerField()),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='uweflixapp.universityclub')),
            ],
        ),
    ]
